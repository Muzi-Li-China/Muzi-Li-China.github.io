(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{366:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"让优美的代码深入到骨髓里"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#让优美的代码深入到骨髓里"}},[s._v("#")]),s._v(" 让优美的代码深入到骨髓里~")]),s._v(" "),a("h2",{attrs:{id:"vscode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode"}},[s._v("#")]),s._v(" Vscode")]),s._v(" "),a("h3",{attrs:{id:"保存代码的时候自动格式化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保存代码的时候自动格式化"}},[s._v("#")]),s._v(" 保存代码的时候自动格式化")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("安装Eslint插件")])]),s._v(" "),a("li",[a("p",[s._v("Vscode配置：")]),s._v(" "),a("ul",[a("li",[s._v("editor.formatOnSave置为false，以防默认的文件格式化配置和Eslint和Prettier冲突")]),s._v(" "),a("li",[s._v("eslint.autoFixOnSave置为true，这样当我们每次保存文件的时候就可以自动fix文件的错误格式。")])])])]),s._v(" "),a("h2",{attrs:{id:"lint-staged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lint-staged"}},[s._v("#")]),s._v(" Lint-staged")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/okonet/lint-staged",target:"_blank",rel:"noopener noreferrer"}},[s._v("Lint-staged"),a("OutboundLink")],1),s._v("帮助你在暂存文件的时候能够让错误格式代码不会提交到你分支。")])]),s._v(" "),a("p",[s._v("因为提交代码前的检查是最后一个管控代码质量的一个环节，所以在提交代码之前进行lint检查意义重大。这样可以确保没有错误的语法和代码样式被提交到仓库上。但是在整个项目上执行"),a("code",[s._v("Lint")]),s._v("进程会很低效，所以最好的做法就是检查那个被改动的文件。而"),a("code",[s._v("Lint-staged")]),s._v("就是做这个的。"),a("br"),s._v("\n根据上面我们提供的生态圈依赖包，在"),a("code",[s._v("package.json")]),s._v("中配置该字段：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lint-staged"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"**/*.{tsx,ts}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里的文件后缀可以修改成自己需要的文件后缀")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prettier-eslint --write"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"husky"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[s._v("#")]),s._v(" Husky")]),s._v(" "),a("p",[s._v("为了让"),a("code",[s._v("lint-staged")]),s._v("可以在"),a("code",[s._v("change")]),s._v("被"),a("code",[s._v("staged")]),s._v("之前执行，我们这时候需要借助"),a("code",[s._v("git")]),s._v("的钩子功能，而提供钩子功能的社区解决方案就是"),a("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[s._v("husky"),a("OutboundLink")],1),s._v("，该工具提供了"),a("code",[s._v("git")]),s._v("在多个阶段前执行的操作，比如我们这次要在预提交的时候进行"),a("code",[s._v("Lint")]),s._v("检查，配置如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pre-commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lint-staged"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这样每次commit的时候会执行lint操作，如之前所说，prettier-eslint-cli会将代码prettier一遍后再eslint --fix，如果没有错误，那么就会直接执行git add，否则报错退出。")]),s._v(" "),a("h2",{attrs:{id:"editorconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#editorconfig"}},[s._v("#")]),s._v(" EditorConfig")]),s._v(" "),a("p",[s._v("因为并不是所有的人都使用VS code，所以为了在同样的项目下保持一致，比如tab的宽度或者行尾要不要有分号，我们可以使用"),a("code",[s._v(".editorconfig")]),s._v("来统一这些配置。")]),s._v(" "),a("p",[s._v("下面是模板配置里面推荐的editorconfig的配置:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统一编码样式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 告诉EditorConfig插件，这是根文件，不用继续往上查找")]),s._v("\nroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配全部文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("charset")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf-8   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置字符集")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("end_of_line")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("lf  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 结尾换行符，可选"lf"、"cr"、"crlf"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("insert_final_newline")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在文件结尾插入新行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("indent_style")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("space  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 缩进风格，可选"space"、"tab"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("indent_size")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缩进的空格数")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*.yml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nindent_style "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" space\nindent_size "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*.md"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ntrim_trailing_whitespace "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除一行中的前后空格")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);